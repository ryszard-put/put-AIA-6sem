1. What are the responsibilities of each layer of the MVC architecture and how are they
connected?
Model - jest odpowiedzialny za warstwę danych aplikacji. Klasy te wykorzystują odpowiednią logikę walidacji, kontrolery przetwarzają te dane, a następnie przekazują te dane do widoków
View - widoki to komponenty wyświetlające interfejs użytkownika (UI). W skrócie widoki wyświetlają dane z modeli
Controller - obsługują żądania http, pobierają dane z modelu danych, wywołują szablony widoków z przekazanymi danymi

2. What are the naming conventions for models, controllers, controller actions, views folders
and views themselves?
Modele umieszcza się w katalogu Models, w pliku nazwanym tak, jak klasa (na przykład Models/MovieModel.cs -> class MovieModel),
klasę modelu dodaje się do przestrzeni nazw <Project>.Models. Klasy te reprezentują strukturę danych, która jest wykorzystana przez Entity Framework do wygenerowania bazy danych

Kontrolery trafiają do katalogu Controllers (np. Controllers/HelloWorldController.cs w przestrzeni nazw <Projekt>.Controllers - wtedy ten kontroler jest mapowany na sciezke <adres_strony>/helloworld).

Akcje w kontrolerach to metody klasy kontrolera, na przykład metoda Index() dla HelloWorldController utworzy adres /helloworld (domyślna akcja dla kontrolera),
a metoda Welcome() /helloworld/welcome.

Struktura widoków też jest odpowiednio mapowana.
Nazwy katalogów w Views odpowiadają nazwom kontrolerów (kontroler HomeController -> katalog Views/Home)
Nazwy plików widoków odpowiadają metodom w kontrolerach (kontroler HomeController.Index() -> plik Views/Home/Index.cshtml)

3. How to pass data from controllers to views (2 options)?
- Poprzez model (należy dokonać połączenia widoku i modelu, aby móc go przekazać z kontrolera do widoku poprzez return View(model))
- poprzez obiekt ViewBag - jest to obiekt (key, value), który można ustawiać w kontrolerze, a następnie odczytać w widoku

4. How to map URL’s to controller actions?
tak jak opisane w pytaniu 2

5. How to restrict controller actions to be executed only via certain HTTP request types (e.g.,
only via POST)?
Należy dodać adnotację nad metodą mapowaną na akcję, np. [HttpPost]

6. How to make sure a controller action can only be called through a form on our website and
not through some external request?
Poprzez adnotację ValidateAntiForgeryToken w akcji kontrolera oraz wywołanie funkcji AntiForgeryToken w widoku

7. Where do you define data validation and how do you ensure it in views and controllers?
Poprawność danych modelu definiuje się w modelu poprzez adnotacje, których jest całkiem sporo (np. Required(), StringLength(), itd.).
Adnotacje poza walidacją danych, służą zmianie struktury bazy danych (podwójna walidacja)
